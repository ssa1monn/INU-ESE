! 포인터 변수

unsigned char
    *p1, *p2,
    a[100] = { 0 }, b[2][3][5],
    c = 7, d = 128;

int i = 1029, *ip;

p1 = &i;
ip = &c;
*p1 = 257;
*ip = 0x06070809;

결과 :
i = 1025
*p1 = 1
c = 9           
d = 128
*ip = 0x06070809

ip = &a[3];
*ip = 0x06070809

int형 변수를 char형 포인터 변수가 가리키도록

char c = 5, d = 6, e = 0xEC;
char ca[5] = {'p','q','r','s','t'}, da[5];
int i = 50, j = 50, k = 0xF8;
int ia[5] = {16, 32, 64, 1, 4};
char *cp, *dp;
int *ip, *jp;

ca[5] 에는 NULL이 없지만 문제가 없다.
NULL 이 없으면 string 이 아니다.

ca[4] = 'X' 는 가능하다

printf("%s", ca); 문법적으로 가능하다. %s는 주소를 받기만 하면 됨.
단, NULL이 나올때까지 계속해서 출력. ca[4] 이후로 이상한 값이 출력될 수 있음.

cp = (char *) ia; 가능하다.
cp의 값은 ia.

call by value 와 call by reference 를 잘 구별할 것.